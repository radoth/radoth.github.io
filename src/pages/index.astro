import Homepage from "../components/Homepage.astro";
const { pageTitle } = Astro.props;
import { getCollection } from "astro";
const collections = ['long_form', 'short_form', 'muses', 'zeitweilig'];
import { getImage } from 'astro'; // Add all your collections here

let allImages = [];
let allAlts = [];
let allUrls = [];

for (let collection of collections) {
  const allContent = await getCollection(collection);
  const postsWithImages = allContent.filter(post => post.data.image?.src && post.data.image?.alt);

  const imagePromises = postsWithImages.map(async post => {
    let images = [];

    if (post.data.image) {
      images.push({
        src: post.data.image.src,
        alt: post.data.image.alt,
        url: `/${collection}/${post.slug}`
      });
    }

    if (post.data.subimage && Array.isArray(post.data.subimage)) {
      images = images.concat(post.data.subimage.map(sub => ({
        src: sub.src,
        alt: sub.alt,
        url: `/${collection}/${post.slug}`
      })));
    }

    const imageAssets = await Promise.all(images.map(async image => {
      const imageAsset = await getImage({
        src: image.src,
        alt: image.alt,
        width: "1920",
        height: "1080",
        decoding: "async",
        format: "avif",
        quality: "65"
      });

      return {
        imageSrc: imageAsset ? imageAsset.src : null,
        alt: image.alt,
        url: image.url
      };
    }));

    return imageAssets.filter(result => result.imageSrc);
  });

  const results = await Promise.all(imagePromises);

  results.forEach(resultArray => {
    allImages.push(...resultArray.map(result => result.imageSrc));
    allAlts.push(...resultArray.map(result => result.alt));
    allUrls.push(...resultArray.map(result => result.url));
  });
}

{allImages.length > 0 ? <Homepage title={pageTitle} images={JSON.stringify(allImages)} alt={JSON.stringify(allAlts)} urls={JSON.stringify(allUrls)}  width="1920" height="1080" /> : <p>No images found</p>}
